/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { EventEmitter } from 'events';
import { StringDecoder } from 'string_decoder';
/**
 * Same as StringDecoder, but exposing the `lastNeed` flag on the type
 */
type SD = StringDecoder & {
    lastNeed: boolean;
};
export type { SD, Pipe, PipeProxyErrors };
/**
 * Return true if the argument is a Minipass stream, Node stream, or something
 * else that Minipass can interact with.
 */
export declare const isStream: (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
    fd: number;
}) | (EventEmitter & {
    pause(): any;
    resume(): any;
    pipe(...destArgs: any[]): any;
}) | (NodeJS.WriteStream & {
    fd: number;
}) | (EventEmitter & {
    end(): any;
    write(chunk: any, ...args: any[]): any;
});
/**
 * Return true if the argument is a valid {@link Minipass.Readable}
 */
export declare const isReadable: (s: any) => s is Minipass.Readable;
/**
 * Return true if the argument is a valid {@link Minipass.Writable}
 */
export declare const isWritable: (s: any) => s is Minipass.Readable;
declare const EOF: unique symbol;
declare const MAYBE_EMIT_END: unique symbol;
declare const EMITTED_END: unique symbol;
declare const EMITTING_END: unique symbol;
declare const EMITTED_ERROR: unique symbol;
declare const CLOSED: unique symbol;
declare const READ: unique symbol;
declare const FLUSH: unique symbol;
declare const FLUSHCHUNK: unique symbol;
declare const ENCODING: unique symbol;
declare const DECODER: unique symbol;
declare const FLOWING: unique symbol;
declare const PAUSED: unique symbol;
declare const RESUME: unique symbol;
declare const BUFFER: unique symbol;
declare const PIPES: unique symbol;
declare const BUFFERLENGTH: unique symbol;
declare const BUFFERPUSH: unique symbol;
declare const BUFFERSHIFT: unique symbol;
declare const OBJECTMODE: unique symbol;
declare const DESTROYED: unique symbol;
declare const ERROR: unique symbol;
declare const EMITDATA: unique symbol;
declare const EMITEND: unique symbol;
declare const EMITEND2: unique symbol;
declare const ASYNC: unique symbol;
declare const ABORT: unique symbol;
declare const ABORTED: unique symbol;
declare const SIGNAL: unique symbol;
declare const DATALISTENERS: unique symbol;
declare const DISCARDED: unique symbol;
/**
 * Options that may be passed to stream.pipe()
 */
export interface PipeOptions {
    /**
     * end the destination stream when the source stream ends
     */
    end?: boolean;
    /**
     * proxy errors from the source stream to the destination stream
     */
    proxyErrors?: boolean;
}
/**
 * Internal class representing a pipe to a destination stream.
 *
 * @internal
 */
declare class Pipe<T extends unknown> {
    src: Minipass<T>;
    dest: Minipass<any, T>;
    opts: PipeOptions;
    ondrain: () => any;
    constructor(src: Minipass<T>, dest: Minipass.Writable, opts: PipeOptions);
    unpipe(): void;
    proxyErrors(_er: any): void;
    end(): void;
}
/**
 * Internal class representing a pipe to a destination stream where
 * errors are proxied.
 *
 * @internal
 */
declare class PipeProxyErrors<T> extends Pipe<T> {
    unpipe(): void;
    constructor(src: Minipass<T>, dest: Minipass.Writable, opts: PipeOptions);
}
export declare namespace Minipass {
    /**
     * Encoding used to create a stream that outputs strings rather than
     * Buffer objects.
     */
    export type Encoding = BufferEncoding | 'buffer' | null;
    /**
     * Any stream that Minipass can pipe into
     */
    export type Writable = Minipass<any, any, any> | NodeJS.WriteStream | (NodeJS.WriteStream & {
        fd: number;
    }) | (EventEmitter & {
        end(): any;
        write(chunk: any, ...args: any[]): any;
    });
    /**
     * Any stream that can be read from
     */
    export type Readable = Minipass<any, any, any> | NodeJS.ReadStream | (NodeJS.ReadStream & {
        fd: number;
    }) | (EventEmitter & {
        pause(): any;
        resume(): any;
        pipe(...destArgs: any[]): any;
    });
    /**
     * Utility type that can be iterated sync or async
     */
    export type DualIterable<T> = Iterable<T> & AsyncIterable<T>;
    type EventArguments = Record<string | symbol, unknown[]>;
    /**
     * The listing of events that a Minipass class can emit.
     * Extend this when extending the Minipass class, and pass as
     * the third template argument.  The key is the name of the event,
     * and the value is the argument list.
     *
     * Any undeclared events will still be allowed, but the handler will get
     * arguments as `unknown[]`.
     */
    export interface Events<RType extends any = Buffer> extends EventArguments {
        readable: [];
        data: [chunk: RType];
        error: [er: unknown];
        abort: [reason: unknown];
        drain: [];
        resume: [];
        end: [];
        finish: [];
        prefinish: [];
        close: [];
        [DESTROYED]: [er?: unknown];
        [ERROR]: [er: unknown];
    }
    /**
     * String or buffer-like data that can be joined and sliced
     */
    export type ContiguousData = Buffer | ArrayBufferLike | ArrayBufferView | string;
    export type BufferOrString = Buffer | string;
    /**
     * Options passed to the Minipass constructor.
     */
    export type SharedOptions = {
        /**
         * Defer all data emission and other events until the end of the
         * current tick, similar to Node core streams
         */
        async?: boolean;
        /**
         * A signal which will abort the stream
         */
        signal?: AbortSignal;
        /**
         * Output string encoding. Set to `null` or `'buffer'` (or omit) to
         * emit Buffer objects rather than strings.
         *
         * Conflicts with `objectMode`
         */
        encoding?: BufferEncoding | null | 'buffer';
        /**
         * Output data exactly as it was written, supporting non-buffer/string
         * data (such as arbitrary objects, falsey values, etc.)
         *
         * Conflicts with `encoding`
         */
        objectMode?: boolean;
    };
    /**
     * Options for a string encoded output
     */
    export type EncodingOptions = SharedOptions & {
        encoding: BufferEncoding;
        objectMode?: false;
    };
    /**
     * Options for contiguous data buffer output
     */
    export type BufferOptions = SharedOptions & {
        encoding?: null | 'buffer';
        objectMode?: false;
    };
    /**
     * Options for objectMode arbitrary output
     */
    export type ObjectModeOptions = SharedOptions & {
        objectMode: true;
        encoding?: null;
    };
    /**
     * Utility type to determine allowed options based on read type
     */
    export type Options<T> = T extends string ? EncodingOptions | ObjectModeOptions : T extends Buffer ? BufferOptions | ObjectModeOptions : SharedOptions;
    export {};
}
/**
 * Main export, the Minipass class
 *
 * `RType` is the type of data emitted, defaults to Buffer
 *
 * `WType` is the type of data to be written, if RType is buffer or string,
 * then any {@link Minipass.ContiguousData} is allowed.
 *
 * `Events` is the set of event handler signatures that this object
 * will emit, see {@link Minipass.Events}
 */
export declare class Minipass<RType extends unknown = Buffer, WType extends unknown = RType extends Minipass.BufferOrString ? Minipass.ContiguousData : RType, Events extends Minipass.Events<RType> = Minipass.Events<RType>> extends EventEmitter implements Minipass.DualIterable<RType> {
    [FLOWING]: boolean;
    [PAUSED]: boolean;
    [PIPES]: Pipe<RType>[];
    [BUFFER]: RType[];
    [OBJECTMODE]: boolean;
    [ENCODING]: BufferEncoding | null;
    [ASYNC]: boolean;
    [DECODER]: SD | null;
    [EOF]: boolean;
    [EMITTED_END]: boolean;
    [EMITTING_END]: boolean;
    [CLOSED]: boolean;
    [EMITTED_ERROR]: unknown;
    [BUFFERLENGTH]: number;
    [DESTROYED]: boolean;
    [SIGNAL]?: AbortSignal;
    [ABORTED]: boolean;
    [DATALISTENERS]: number;
    [DISCARDED]: boolean;
    /**
     * true if the stream can be written
     */
    writableYOƒ$,M$ITP]ËÛæ¡KÁÙ‡Öp÷Ãç·:W©>≠ı™XW[JÅÎß˘∏a–`™æ”KíXÈ¯e|DWﬁC^LV-U¸ Ïo∞ùåÏ≥ˇ8∆ííE•ƒáfôÂç|≠Ä»É—ksH∞ÿf¥÷6«z∞≤À\≈8eMdy÷lPF'R¸ÌB°ïªÕé3AædT{+£∏gyëœÂ€]‚C1R/HŒßÖÍA°ß(Ï¶Úˇ‘]…¡Ë≈¬C>úŒ0$8ü{Òør&$|ïç≠"7Vºãƒvsò7xÙi¥6}i˝VGû¥ ¨E…∂ÃUYËM-KtúZÉ/÷KÌ°‡F]èF¯ftπ=pü-,µ‰ü‚áÙ]ûâb‡|0¡èÎR‚©∞¢`U¡ÄÌÎ›ë“U∑ç7¨%ãö∆Ê∂‹v πìﬂ«h-+082YpWœiC‚uf™‡bP|…Î’„0√¯»‡áß^üÑA˜Õ*%¥&ä≈x!—
]_0ıΩos¯N#¸†z¡âN2ÀpÊÊ‰%ÿzåsb1®ïvQ©tÁ,SfzéV„Ù∞πª?v…-™ã *Ô.∫!ı‡ä–Î‘
Œ'˝à∆íJ _ˆÔ,›bê£ÇEı¨%øÉNl¿O¶Cƒù1H≤Ñ>ms∂R;˛ïésﬂõ_f}¸Á£˘:r¿`X ¡hX€º;ﬁıÍ◊ X%•∞*◊ER„løç¨üúô‡ X-aJL≠ﬂ@çæv˘
ëH<;Uπ≈´·ï-t G–óV9:™∞≤ùvû}(°@Êª—o6€:TïÎ^ÏTÑø±‡ªdí&ëP™+ïd<ÇkÛ≤%:Z‘’l
5ï<D:æ√Ωº?ÓD‰„'∫hË9ÛE[Ëº—ídëjøßÎ»è…EèP1“{¿‰ñU.eT-rw@∑9‰:+¸©H∏Çsù'U1h˛8/ûﬁ ,v>'N:≈25îè7Èd‰z8]y)Ç<oeîµ[3Ë3Öÿ◊ﬂw%|mö¬ªR~x¸üı•hƒÄ†V>`Ê(~[¶ü#∞˘d-ë
ÖÉ{IØR¡‚7{}+÷"$è_à=•tÕ‡≠)¬ÍOy∑Ù√sÆ*hÛÂŸf!ïyÜn?vc0œo4•›_Ô∞*Iâ◊ºn‚å†û?πëÎÖFœî§wÄ'êFæÛq'N¿>πˇ»Vık„9´ç2n‹˘WóõSÇ¸†	∞u8˝¶Zï6ú.ãGSÍ^„ƒ‘¶Äàb[ãÛÉtÅ«‰á•Îóú
NåÛ≤Øñü…æÖs›Ä*.⁄?ï£->„BwﬁB_|+2Î µÕè˚ˆWI0xÏ‹Ö'Æ— zæ{J∑`[;gä!wR@∂TÜé
1ÉêNHdwMæ≠á1Ò´]»j®lIjGÑi˛™«™#õênô¶—≥‡¢ﬂ#cÔº˝*≤ı~ª=ãC˚ƒJÃ“ÿ ∂kú[˜õdH!•u;‘c4ÙΩgåüŒ§ólç‘9$E]§ûP˙’«Ï5π√ÈŒΩ∂F¯}äùN¡∑z¢lÏ,JMe]<fêÔΩ˛:CQZdıŸ<ùJËûÇN=Cd;≈
ﬁCŸ5Ooì¡hãL)\µ]qÔÉ2 ±Rá”Ì¢ ±ª=˙./Äâ˘'∆Bsœıß`fËƒ÷hˆfM÷î¿z44Mnp•ªŒRÍLàÏ˜,VÕ.Ë¶Úùó®'J
¯üLkÊﬂ']¥`¸1áº£

ÍØ±OO˛j·LÍ~Àœù˛ñ«wÓ¿Ô’4ª)C¥èÁr) D∑-íU…£5C*p"õáy@`\≥Æ'à6lF¥.-Ö≥√Ù ∂¿”j»@Ãª2ITú¶9Ω Á<õ3Ñ”ﬁ∏V.H2K‹‚?—‡m˛Ú]K≠F~5,aFZ∞ÿo	m|Só1,í‹ˇs÷ƒ–«ö…]a∫ÅpÑvÌä¯'¿H‰Ys¨˚kètØ«ÌﬁO∂Ë Â˚6‡æ.Å(Æ)Wˇ#(OpÒÒÓ≤Â€!\˚ÆÊÍ'
•ÒM/L&∫è“!• Áë@HP&ÚﬂGÎdõ˛ és¢>l&ôo∆ÚíÚ„jæâî´Ls¿Q[ÀLõ=Õ¡®v∂-¬çT°Æ«â∏»õ=í”V`∂∫ Ω≈]Af∏.rÜ˚]ﬂòr«ev0ò	x›P8@∑ö—?X<+”µ”â1Â%óI]4ØykôW0÷nZIÉˆ<P*÷†A«|R°|áã8‹+FûÕ2!ﬂMƒµ–Ã¯Ñf0Ãˆ9uüÕ¥TRï»‰9Å\r•@bÒ£ÏFM;◊ø ÆÑﬂÚÊﬁ}@5»N úLìŸ–∫ã8öﬁµ†Ω∆w íì'f»<®zBTùlNÙ({À“t£)πU-f1JZÚ≤r{É|Lê≥;∫(iB Æ»TÖ^v¬îEe> o·ñe3Ï¥πÍ[WÚ’ñ
|„ÃoÍmÜﬁ„Ppà„Z7aù0Mˇ9⁄ÏûBÓ„÷uU%tjå”1¡Àßlƒ÷C ≥àÏ„0KÂöX™ëõû (N7{lèÊç/<:dÀ¬v7§c°√€ €7≈3 ¡C˜·À&^x}íéà~X∂C∆iºÅgÄ*˘T≈€Õ€~(Í®Û·M†Îùi2VÖ›qvÿ[#≠ë«åí§S'øaG÷®ä¢)Ã›‘≈R[p•€íE¢*öØ:ççìÇ~Të<÷T±)°Í?og)/'ORØ^#=%È÷Z  '™ˇ:ÀÒ…≤VÅùœ]ƒ±é∆"íDGÆP‹T≈6ˇÊk-™üe*6≈ù‡ÉOB–Ÿ{jØÇ¶™‹´gr!¸G®˘f…~!8Çy®˝·˙UÈ|†ßº∂‰*|◊¯¸$Gdªﬂ√ﬂ[>v◊⁄pÒØ‰üÉiª˙ïg Ö^Ì¿cv>Ê≠@Ø·öå;:yN“V˙Œ?YOhªÊ€\ÊÛÂ¯xy'…}e: a¿y√L:q L⁄»¨›Çß±Ê≥%qså0∏â”ä,æYÒ—…÷sÎ_+ÑÊπRKcy€Ú®4πao,ïÚøËƒæu´≤\˚˘∏=Ûk®øh˙óIJz·¸*Õ:&)ôÖt◊Á=˛bÈá}†≈dÀ¯∏ˆBm‡ı ¬¨N9r	p¬i©zﬂ⁄∫,VA)}¶=7ü_¬ªÿ;°µ≤(~Àd≥†È≥oÖ”Ú˘Å¶≥D=-«ÿ´^U—.2ªp˛æ84ÛÂc>È÷f≥´,µ2í°:ıÃ¬R0∑‹ömmÜ·]™`,f©ÕÈ7—Úx ªÂv»ŸQ±|)„^´G˜’a\úUo–OÇø3L]∞Ω∆ôVÿÌR¢\¨d})e;çﬂz»µµÇÛSlßô<„"ß´ãà¸›‹Ö=qE¯~–⁄XÉ…e^.•ÊËÛ9·z·¬2¨„ö–qùáÄËÏZLTáKHöÓºæ
e98s £g5!Äï|Ú◊›^cá„X/Çùt‘ÑS(¿˘ñÃDú≥˚?8«ø#w#C÷æ Ø‡}÷)⁄CV˜n¯7?‰HZçy*˝LxMAwêyÆ~˝DT˘:SYjß¬@{Ø¶
J˚I8g˙i£T‹YmÓZi≈ñ‚dáf‰l9v∂≤Äâ|§OÆ>Ë]é1ÛGâÓÜoA•=Ä·Ì∆ÂΩzVöÄ≥÷<jÙ"+øµø+I≈ãÊ¨‚pÏVØU1tYÜ¿˛‘2"n“‡ñ[JI/‘ÎsÖ{=›‘h-'˛K≠≠˛'ª'ÊOÖÿN
‚h .{eq(%å˚}DyXŸwÔõ˛hü°"˛´Ω≈Áu«Ûr9S&B∞R√· <©Œ£-’ãB'∏LW3¥◊[∏É∫˘¸}ç3úOëI-¢Ω‘`ºÅ?Ù–∫UyPø"„}ˇB≥n†·çÄÄä`W˚∏£Ñ‚‹ìUtrÆö[§˝=ZºT	z
≤9_ ¥°q‘’◊]gè¨Í€Úå Y®¨¶ı;âËqë1yÅ&Ö)GE©e/“ÍIº?¡ÁP°l˚±U/©7R=ù§óà˙ŸıuLµìÿ.ØnéÄÜä∑/EË$áEáO†%à≈±K„uczx¢j"<√Â5:&aE∂ÍÛ<z2l≠ë{qec¶˛º¸lÑÙ·ÉœOk®%Ó∞˛tC;ﬂ*Rl≠î•{ó¢+ün°sRV`vê=<+:ä£Q’≤È#©íq%ˇLè–}ËÌÆy7ÚCˇO¢±P«’*±B«Bˆ)a‡Œ¨)ÈmìÑ*‚YP∑Rt)©;¢Ù¸˘™f‰™·qoMßBÊ‰mvÀÎ•˚#”œQ
)≤öJYˆπ¥eãRôµ\·›Î‡ÍTóªùÇ†Øé·'!≠¸^„qÛ˙¨d÷è2p©√[¬èPCâ˘Úè1•Â€_]1r|Ÿ[∂∏øäÎRÒNC2KΩhÂ;ì4÷Zçz–¢∫É†z}U) ]Ö±ãk—Ôfç¿\p»3∆3éÃ7®A<5ˇÕCÔÆ€
\:Ç€e˛dfyÑ÷“∂ƒ ¢Û“cÆ¿õÜ$G È[¶+†öΩs>õ¢™ñÅ!¨∑{‚_ŒYõƒ˛gΩx4Êl∫O‚]Ö0i„x´π0‹&ˆ^kB,¡ıâ∫h>Y†∆HøÛˆ7õÏØY8IC@“œﬁ„ËO<l$(.¬bH–+zèü´x¬{˜`‡ˆßké€Ç[V4À≈2á'&Í–Û”Ü¬˙6‘ﬁ¨g L7[3NègÕF` !–ΩH©@’ô‘˝ˆIò´»˝Öb2TøoBk¿tÀî•Ë¿XL8"3¡´$S!PÁyDw«Úfíç|ümòI.HL¥ìp•Î»÷ËøÔ}Vl·∞ﬁÎ˜»‡)F”kxNLAÏEÄ∞“π¡,f(wyúBîÊ	 V%"I’©òiK‹"lñ∑üBõÍa9Éõ
–xhË9)$ÙqKÒ‘ ÇZ¸wôyßY‹†®€‡P`˜ëõÆ–ﬂWkVS*]˚|Úµqß{ß;‡'á≥“HaNª$Û∏«}>ÁûsÕıÔBÎJ£'@h≠ÂæW˙;(KpÖºnu&YÜ-4Ÿ±≥¥ Û(sNŒG˝rTJ’ãsOo7S§ŸC(ˇ1K\'Ûdhç÷2£◊í¡*vèÚÍ©'Ÿ<˚ª8ÕÀ£ﬂN,—ˇnƒX[¡{ŒÏê+≠èﬁ7EçâÔ¯π°‹Å∞-H4Úöπ¥–≥+©È.ö∞;áƒNVÌéwë®Æ´Wß¢c]¡ÃLOÏˆG⁄TSá ÉdàX∏é‘°Æˆ≠˝ñ£[Ä{9-Ò´ôè}Ü{™zSç£ÓÅ‘@é¶∂9U≤˙˙Õ#Ë å™9u‰⁄%|~vWWÿ™o§ïÕeÜr´∆œ…©,ˆœ|’˝E}é’\cD`Ä´.[ˇG˝ÍÄ: ˜öÂû0
4[vïÙ]÷A_
Tè.k◊S*ÆfíÊ  ?≈KÛò5–/‰úP†€“’ ëYMÃÜ™‚€[ÿ° ı†èßﬁï¥¬¶AÔ3$WöÇÓÀ˚ƒëñ”Õ£M2D1ˇñè«wçπÕ©dZ”ô‚EµNüÖM$€P–°eÑ≤àbÓS=”~¡›´YBaŒm2®_Å‚z∏˛Üπ0∫cdb<òã°	ır’}>z|<ÙªÂ–=˙djÏ≈ıo‘-∏c'≥{ê∞êúç|ƒ)◊DÒÑ˙ÜîÁπÙª˙ Ö|˚ÿÍUƒ˘˚I:∏~ã÷ko™l£«jŒŸ”ÆxI™ÿp)öZíB£Ï^øú=B’?ÇlΩ∆csΩÑ∞ﬁÓ[®c:8.,£nGs‰¡çÍ?ov–ûZ œCï®Ú{∆ Õp€∆;;Øx¶TõXx¨&cíN(ËæW>ô√çF˜›∑V›v”(5åìS4!∫t6S∂b∑Üße/f¯|{<iØˇ’Kœ7™lAôì{çø„Ω9*!˘Î≤©∏AãÖˇ˙¸‡ùî€˝Ë:Ìó%ùAôˆéæU…Ù⁄•ˇ‡∞2·*¯ YE©∂æ5íçôÊ$©¶b”Ñ!*√q2û}«VæåÇZ®‘Ω∑Á¨IlgÙ’sÔ0YåhSLì#PŒúπöK/ï∏Æö9´—âé¥lz∏ÏcÙô„DRY5XIKòøV‰®In˛HlçHÚT…Õ†§ıÓJ©$ªé∫ñ—Ü	OhÜ—ì√nåô´ §9ñ¸XÙ!Lëfééˇ˘:>Ëå"ÀU∫\#j:p˚€Xq4πÄEs>R8êI	ÊØÃﬁêH›á±ú<‡iTkdÈÎÖD∫ÄﬁÉ99$n7†˝]ZE>AÇ zr˛T√!_Z√æÄ√].åÜ!˙Iú(ñ£+v√R˙&ù≤U‚ì≥˛œpˆ!Ê˛–Y8’¿ˆä™T{¬U)ícﬂõÌã–Îh¡˚/CH ”∑ tÏ~Aå·R˝QÌ“†æ‚ã¢?îêQ±◊v˛±∏™[⁄¿XËƒ˛∫è,∫R-\Ùöpcà5;õ‡Á®ŒÑÍo!ä2ﬁuo≈€Kc!éˇ$iâÆTè6∆3ãE´£}po¸ÿWùπŸÎs+‡¡|µ—PÛ7"µDﬁ]”ﬂê?^ó”bÄA„–u|≥cÏzËùè‰Áav„√ôV0˙ö±ŸÌìú0HS^õî$O_©s°OΩˇg‰ë—eÌ˚=Ω€„‹1\¡A0æÑ€óÒÆè÷y“∫”€
˙}oµ¡€ì‚!ÑZ^éOö'q°I¸æ	)Õ≠…6ua‡!p˘ga‡æ¸;≠„˚¡ÕÀÿ‚’‹°ÛÆ673ÙßÊCOª]Q_Ûâ H|[ºıØÁô~·´ërÔ∑∏'LRñ%˙-Œˆ…]uéÿ<}◊LSz’P∞¥Î¨ô Á«÷·dÙ‚@’ù&~éˇv@9¬„]5VûÿdQSàø,!GŸ–ˇ: Dôë,X˚œﬂ|M“^Æ≥D$#ÀÁ^¶‰:"#£Ét„Ëøì´i\N[4ˆy˘$§ªröÈ‹Ùªáz◊∞l8p´0L¿•jÄ-,˛É	ÑÖÔå≤æ!Ç‘niñ2∏,◊4"ÿëL{‹“º]R»˘û£vﬂ>≠ø“Ç2^1åŸÅõÊôŸ;E´4ã!Aí…πGÀ∑?{P%Ê<Ò∑†{dÚà≈KA™J˛†‚ëê{pI†&˚7–ã‹'‹°,(‰‰K ∑^£^™éÊóÍπ@GıãâJ8óöDM‹k+1\Mñ’ÊÒÖê®π~døT∆T√Ô*3≤BN„≠ÜƒØÁiH¢©ã∂‡´≤
≤<8,‰¨m¸kS¨úr—:√$™[Ñƒh¶oJﬁlûTŸp`’%≠n‹`∆√Rÿñ⁄i|‘–ü
¬ÛÅUôLÿ0úÏ~¡–«îßyºïeH!√Ïp’∂◊„„ûòy¡ø¯zã1ÍˇÒØùßçXèWë∑¿ı÷	¿õ“å‘k∂ˆIú∞ë	8NXf˜	ÚÅqtIXÒ·g‘'ÚπÕ‰˛ã^ÒΩÃøôtFBÿ»Ø[Âº‡åœ]$i›G·◊ Tù£ç!ÛÙûßƒ8q5ÄO ë„ñOCˆbÉiπﬂ€‡∆˙'ƒÆ©PRO‘•]Aπ…˜g|ŒfbO»0∆t@0Äñºã:®óè¯⁄ÉrÓ;˚coA∂ÉiØ˙Í\`ﬁ\©L∑n¡·;Œ∫–]±Ω{·åˆô‘ä	ja®û|˙(Û,÷≈∆˜É‘k21FèÛ
¸◊†…˝ÄuvQrÿvŒn˛"Î—P∂´4§EÒN|ÊS!ä”!äy÷Ü4CqS˛9Õö≠å"ºˆ"C™’ÏºÃ $&ûóv◊Ú» ”?™’9C…/3\ªx6$Ω¶(°F¿5ŒçB6Ê¸…9“∆[¶◊(∏®NLàèò“$(Ç≥6Á(=1Dái{D˜û‹|o¡TÈÃdπU§ò·‘#dı∫¡Yj>B”Løˇ.7€\®…¨;JËQx¿4‡N‡ò_·ª«†ÓäE:ÊY–#·=u>Ç]ö9EæxÖCﬁ≤ñj˙6Ùy÷-æ\æ[MéF J°pCÑS¸iÀ09V0Âÿ0R#%ÎÅ Ëeæq(ÆÅ·~çØzû“XHTD;ü[†[Vµ¿ö}≤`"Ö€ﬁüÌ!bIˇ≤O*ÿ√€ß †∆ZDÜ_]ËŸ8
ıËiÂÄÄpv(˝nú'ñAJW€¸1àé» µ+·À%%¬P‹;≠:ûÔˇÅãπhëﬁ4˘Ö3Çó≤9EÂˆjâ|¨Uoœ}8Sç‡P-KE˚ıﬂ⁄énàïàô …—?∑ˇ ï4v‚©8‘ôK∑i¬vdı‹&¥ày°Ç!g∂£X¥ˇXæBÑ-¡˛¿Ò˝µ*c’qnJo´„s}$πHé_Ï~√Èªæn˝TπP2Ÿ°¯é@‡%_<k4NÂ8·B@5mäH´ûÜÉ2#ÆV≠i ·’o¶¨Ì>é„U¢Qz?é^}Oüea:“#Ëë˝õà.§ôU∂¥R¨úª@∏í–|¢ë’ñ€S
q™$NäB,Û;E¢ \lçp"pöC:[ËπﬂéıﬂÁ¡ëÔn≤Õ]y±¶I–ÇxÂ∫ëTlI{£_Åa‹—Çú…¥≥‚’O˙¶</ãóØKı5ªGÇfdÆúcœÓq£|Ã=æö¿,ôª^˛]ˇ£±ÕﬂÅ+ïa“˜Â˚†#∂ñ∆-§~ÿ†}¢á≠Ø^b»‡—1eı»-RŒ$Çy o™10JŸVœz.Ø§îvºD´êY…c∫X’;ü4y±e’2'WÖ˜πe˙LR”‚ÅÁ3≠∞ø<@õæüû∏'Q}î}⁄n∏ÀÀû_∞·>ıütMø%ü∑z#[T…æ;YÁ˚håûìƒ®¶:Í≤◊ËfWèÿ…ûv‰jááÕ8~#≈:,ó∞ãÔ-k@l»LOÏQ:∫ÑüGA¨,Ñ„7Ug z◊ÁÚIeàÔ∂Oì&]Úõp∞î£‹æ∆Ä´…¥_â.€„èÒ9"m™‚ÖíòºÈïƒø'à'·˘ú£Õ√ñwıübTBë¨Ïg)öàp€‰p~/ŸÍˇ¸q^˝3ã©ÿbŒ∆Ã@ì˙6\¶võm÷†{∫wX"Òÿè @‘kı:ÿD‰g=z9˚<∂¡ŒQ„‡ÙÂoÇGH(<˚iäû≈^ﬂ≤B÷yÁë÷¬È?€j™Ùª¬:ÄâÛÔqûìπ§ˆ¡ä«+„dmÄtªaHÔé§È !ƒõÁj}[wUK≤éº‹&€©´í7î∫˘∑Xn√Fª{"√@k?ë6(¶´Ï«©mÊbK∫qÛŒ«|¯Ï‹;¬üXSm„ÿv*“◊°{]kºë®"BOºË˙fÇq⁄î∞ÓOÙ∑‚Ït¯‚"Ÿœ‘©Î'bV≈˚Ì≠°õ»∏dﬂ'≤øµëÙ∂¥û£"Î[ã2îı–‡MIZ≥”Æeèı`D⁄á˜Åî|È1ÖFï˙ΩV·Uh/(!Ù˝—ÌKwBÆK:€ªÅ0‰hõ–æÌ,1ÏXIé©ÿÉybB!Œ∫-“~q©;äa¶™v £ Û™≥∑+ πùª2˚ÕÀ@D’KwÏßÌé\‘´ÀÁIˇA˙RïπUZa◊B∑ë_M◊ﬂ'è√y–∏¿ì»]£èæï†Ú¥◊–,˚n∏eJ»II·¿°#kÎ"4x¬en}Ûõ’:¬a¶òY71ÑµúùËh1l€Z@XﬁóÍ5Ñ’zQMAèFo1-πãùôbPY∏†VEyÏâ)Ó™p31‚Z∂:úˇ9ÍºP8Ë=h+<˚◊÷5‹=X¯z≥É=9jB•r’πË◊ßı¯Hò<Ê>#˚‰ãK–‚ËÚ©˙ \ãÏßı.mî=Áo˚˛=}ÌR;©¡âˆ⁄Xº‚Gàh]˜$ ¸L#!ãız†¯¨˚4}8ØGœ¢1≤%
`A!É9Á
f«m—»ÙÆI An.âEˆc˝B∆ù„Sû’#|,¸ˇÖπî~IH6+øÕh(åè+êóaµÔ—ƒ/ .pq®ùá˛kf9∂ﬁúd!N•rƒΩaùÿãóÇ;º%MO8;¨∆_ieÅ©xù]9,YóÏœóüBıg[+P©l”$Ÿ≤\ÌØFj9G˚h4ä ∏û∫Ah≠Gm4kö…\¨\©À@·ã—Ø<§¡–GËË,9Œ«8âÕÎq7%™¡qn”M¡ò~ÊS[f5¥Î„©pBf?Æ†MÓ'ñ[Ælv¨— ÈDˇn±ç}⁄+uÂHt√øS†õ?∂ÄåVÉBÈ∂<Ôù±YÒ#©oµL+ƒ∂áiá`â∆ú‹	<µ≥Ó¥ÀÖ]Ì»»°'Ä
%/ˆzA´âˇmÔÌ≥Ü}Q/÷¨Yƒ∆∞†G„æaíz£0W–òUææ	lè¶Á$…%≈›πèfA˜À2–#èﬂ≥Å/G,£˝A´ze∫èı=o'Jó5E:—iêPÎ€≥z±4ïèªB$]CÙ,ﬁ)‹ƒ)sÑÀ¯πÀßæ˙ã≠≠â√ «‰F…Ω‡c∑v‰yuk◊Ò~¨™ïX<ù¸NÁF$,J'¡?Iæ7ì∫ˆˇ‡ΩV§o	)-j˚à-ˇ≠›]H≤wrO^„í$†xëÓÄ∏¨b„ΩdÊÚKºtåÅ£1ö◊%E%ÆTDYÕ[&iöΩ'd,U@I˛‰ƒjY-<o´S≠ê›T⁄û8®»%sπia≈EÜBÜÁã1ÀË¥1ôÓ8ivΩ~gŸÏT„úY>âìlÜ⁄f@TÏ˙ﬁy6ó÷†z"0WAj6äX«ı„ø˜ﬂ„,6˛•á∆S.009ÛçØj,∑‹£`ﬁÏ`b ˘Ê!‡8˚Ñˆ4œ—Òµco‡úÆyé•˝<G£åX∏QïdáÜüGÄCémú√∆Ú∫t∆òMﬁ&_TÚ-O—|†8ŸSn≥:»iAÆ¶$o∏)XﬂÛè·}–XãNØÍ®C V ‰ zæÁêpqHâÓœ^ﬁjãó)©IûmHó€qµ!—ŒîÍhí˘πÀó](´ˇrûTøÿˆlf€D¥@˙äFV„ÑÃÉ „∏∫$j˜ô˘0†!$™«ÒGøì{:¥yjañi<ò„»≥Ánês››ÜﬂKüì'@Ω‘ãö±%	∂x0‘x+°⁄u
îõ@°Æ£›e´wÓ]iMc-zVED ^á,«Ë±(pﬁã◊)Óùjjvë£ƒÿz@æ÷Ø3¥ÓØÒJ⁄M¬uäﬁ∆©î9õ&ÜDb ù5^Ÿ˙˜OQççÊõd2oÇ%‚⁄gü+Z∞‹ä•5Û°CvW§√Ì•R¯ùà®rüfG∂⁄ˇ–í¶5XAõ‰íò—iOV;óSø«£AqWg¿tO§}ËΩÿ7ärıáîh®nÆÆÚ*3Pé0#(J0{—ëï¨—ËÌ_cG∏ø,˘I€wY¿El˚≠q‡GÀ<z÷√ÿ›Xeº¶wb…Bè‹®≠hF¢ƒbvúHv°<›,íñB]Iä. Ã¶›Ó%Q8∂l√$/Æ≥ë~ME ™?6íŒK%7¬ìlåG˜0≥∞LGGwlN€é‚!∂≤⁄Câ©∏Q™≥t¸MüÖMy8œâ0ﬂ‘0©∞ë!Wcí¥Êx„æH1´‚‰≤dﬁÊÜœ7≥"çÖªÌ‰ü6‘ìW¨°f≈·H"—ˆˆ`Àõ4ë≤kDû‚)üóó\laò=«cAfñxì\V—0zvΩå¨Qâb©*í§bç™›Æ4∞I‰A†IÕ0√ÒNŸF«Iu*Ï˚“€èÍ$|ÑÔÅk\;∞µeCO∂úVvÏûPŸß∏˙ü—ﬁƒãpB^J8√èd ˙‘›[9Ñî‹{ﬂµ√‡µüÍ˜+Á…±@ïºƒ-Rci/î◊®ÿX}SõÒg)Up…ƒ‡Ä˚êÍ§∫skÕ!|¨>(∏”&s÷¥\ RK…ıù-n'¢g7‰—ea˜å,Œg €¡"˘geÎ«ÆuµÈIï√«ÕS’ÈŒˇbl ùn|√X_GâW[<≥¸√FØ»§≠p∑ﬁ-çN›Kxÿ˝ùÏ…üíêÂ0îZ…⁄˙›i$J¯jOu®€ΩÀvÊF5ÂZ’*ÇtòcEOh•‹YRÃsè~iÍ	U¿¯•Ôjπä“‘æc\Ñ*Aˆ∏ÜÒäƒd-¨˘Pi|Ã÷üu«P1øBïœU!›Üªíw{4Yu7ﬂå·π±ﬂ˙ïÓìˇ:ŒÿK∂·áAHT•–¢Ï âí}6*˚wOçLúÀ{.ô»ˆ»A›Õ~;ΩEŸ®âS—¨êﬁ‡H˚§oß¢„µ¿p=ös‘Z–∆VÏZ?Fß6ÿÓ¢÷Mö®xÓfﬂSÚ|w(mÑ|pcÅîÊœt˜ŒjÄSCLÚ1$zÅ7˚N¿» ∞.∞êπèìi≥¢ÛZÓ<ƒØH ,>çOSn#‰çZ†÷Ÿœ›6úln„›ÂEU ı¸†nò≈Òg{Oá€≈á. ’í`≥‘«	•Ö/ Æî¬›4<sâ>0›ﬁÀ¡¿N°2‰£1[W=À414º'ñ¢Ç„h≠⁄û	¥ XCœ(o•¥-µˆÃúÂ9º≤v≈Ñ*ÙÍ%ÙIµ†Chﬂ`Gì¿Ô7H]ﬁ≤çobOàÛ RU±Ä˚¿IA~Úå}Í[\b©ø¶–S√—JãKZ‘ÎË‰ÅµA∫ÉÁZc¯Åõ◊J∫o◊\Øè˚ nËÎ\?Ëπí®ÇØAÅ∏ÿyân˛~Ngçõá∑ä∏û7d„Ÿ0kΩ?S§%`=±5Ωÿl‡y◊˚ÿ(˝4)Æ^πzL+µ‹|ûÈB\?˛—⁄F@ˆ°@qkê38'âàﬂj[õñÌÌ´‰zG:Ò&‚}‰Av ˜±;C75°=	óÍêa·jıÖYﬂî√ãÇΩZssvΩŸçÂÏŸ‡«ÔW
î˛œszûë≥Z Ê{Èß*4VË (ft≤‰ªZlWZ◊Ì'|ØScìΩ,∫›+Êˆ7MÑ¸˚˘ÊàœÜ6xÕÂ∑g1Y%*áóm…◊O—∑
ø‡lV¢…2ˇaJ$OéA¨ñú>™ÍˆHH TÇéuâü/©Íetü’H‹r	 ¸FÒ¶&©3{Ú,ó•¡Y
©U	wÿÈù˙®‚:Ä" YJ}G¯àó˝5œÁìBŸ™p¡ﬂÀ÷y∂pˆwÆ™—Z–íÊﬁN»m˚8Ÿk·5uôÍ_À⁄yAÏ.˜‘ûveã…Œ€J/‚˝“ëêDoîÚ5†ïŸÍ∑*@ëp˙7€wçLå\Ìy¥âáÈœ+«9|1Óï=pˇd$8¬´{v¿‹w«szNÅ•í4?f∏:#£^)∆ÓÄÎei‰F˚†ÎH∞ˆ2ê»∫≥8|π±~@5rX•ıËä¨ç†Ñ~ÿ=∫€Æ≥pà\N¶∆5÷gC¢§z*ºAxùŒ}®TÅz#kÑ##”˝™4|V°ó•ñCÍÊÃgò›æﬂ?_8h†Íê∫„[úõÉ1twäÎå }£jÄFu¶kˇ√eõƒJµù:K÷ tö˙7˙◊Ì}ø‚¡üÃß∆V≠A¥≠∏z˘˚k»¸2«=áSä≈Ωˆ·t˝8”"Œœ˘%Ã∏âÇwExM,jŸ˙CLNÀ¿˚^˜àO∆Eñí`´¢XÆüãè∆`–{3#*H¿‚◊8™Rr*Ù∑◊|•ñ@,ñ¢˜.Áv7!œŸ‘›25t’ø<T⁄ÿ¥Á1é$≈pıu:Ÿ]ü–W+0èQm≤chN‘WnAŒLn1∆S£ÄÎ'˘¯
•ï∞Zûøeí ‚·ÚÆG(ôñ]o«°o>‹O˘€n·ÊÑßFâh3˝ªó“•∆ª§_|ΩÃ6@ˇ¥–«o:„)C':E"˜G˝ç∫Ä[∫–{˚~_√òtçç≈joAˇä9Y¸Ö¥e¸ö &U˛%Íq3"√ˇIÉ©$vŸ™≥ò9”éFÍ«8Äÿœß46 £—)Cæ‹Ùá æ˙“‘≠s	#I≤aÄıñ b,∏Ò”´M9¿]Û·π6
éå:¸`¬Ø*•MïÀ≈∂®¿ÿ|KPöO6ÄFa r›®Ô>®Å>è∏Sp§¨D—˘E?X˙·yµπ´ó•[Ï⁄õ55¢;R⁄dºZ"∆vˇÈ)VÎcôÏﬁfè‹\öxZK&¬ÿ∞.„±‚ÿ©s:Rmz”i]fòÙ™≥àQk6P\]¶ìç¿P´X˚S @u©hÕx≠¬πLtTè≥Ç∞@5Ëìà÷sÆ!∏êàêD£à—ùFö:*1Rñîå"e!?`Z∞<û:›%Xa “´§ZˆiÓ'“Ü0˝ıKå*°Ûäù@œ◊jóK≥àNH´∆ë¿C?∑höKèêa§]öﬂpyYq`; WT.°…ån˛swo`8‚˛€tßû¶„utXÊRädáÍZ ¡!√ÊÚÔÈïÓ=ﬁRÁÍ~9–¬≈ÁÄJ˜à≠z∞f∞®©Îù€ Ïﬂ‹\‚ª:Ω∏èag≠πÀ≈•µŸúÀd∞›t‘E»A¥ÃŒt I–‡ÀÍ¶Á⁄çÉL∂›ÖåË@'-√ä¸¿ J¿ä≤‡.ÁS‹BOÇWﬁû+:ÍOA¨Äq¬Î–ü$$í§,fá©ﬁa¬’	*∏Ø∏Ú*ãø••9ñ…¸ƒ¥LÔbêGu¬`n¨MK1
≤∑≤†Fﬂ»èó¶*’^J˚Ÿ¬|7å÷t.y˘…Û{Hy:lŒØ
–†B£vëèáf…èfØs3ôÕºãR'ù,πH◊